clear;

W=0.009; % mass flow rate(g/s) 
T_0=298; % °C
A_0=pi*(0.22*0.1)^2/4; % mm --> cm
T_a=15; % Air Conditioning Temperature 
u_a=30; % Air Conditioning wind velocity (cm/s)
% 侧吹冷却风速一般为0.5m/s，环吹冷却只需0.3m/s

rho_0=1.356-5*10^(-4)*T_0; % g/cm3
u_0=W/(A_0*rho_0); % cm/s 
L=150;
IV=0.67;
miu_0=3*(IV)^(5.15)*exp(2.303*(3280/(T_0+273)-1.54)); % g/(cm*s)

T_a=T_a/T_0; 
u_a=u_a/u_0;

m=100;
F_0=80*L/(A_0*u_0*miu_0);

numeric_param=[W,T_0,A_0,T_a,u_a,F_0,m,u_0];



%%
% K_d A_op A_c
num_params=3;
lb=[0.30,0.1,0];
ub=[0.40,1.5,140];

%%
num_samples=3000; % parameter sample total
num_state=6;
N = num_samples*(num_params*2+1); % total number of model runs

[param_samples,param_com_samples]=parameter_samples(num_samples,lb,ub,num_params);
count = 0; 

%%

outputs=zeros(num_samples, num_state);
outputs_1=zeros(num_samples,num_state,num_params);
outputs_t=zeros(num_samples,num_state,num_params);
param_list=zeros(N,num_params);

index=0;
for i = 1:num_samples

    index=index+1;
    simulation_value=param_samples(i,:);
    param_list(index,:)=simulation_value;
    [~,simulation_datas] = generate_datas(numeric_param,simulation_value);
    % data processing
    if(isreal(simulation_datas(end,:)))
        if(~isnan(simulation_datas(end,:)))
            outputs(i,:) = sum(simulation_datas(:,:))/(m+1);
            count = count + 1;
        end
    end

    for j = 1:num_params

        index=index+1;
        simulation_value=[param_com_samples(i,1:j-1) param_samples(i,j) param_com_samples(i,j+1:end)];
        param_list(index,:)=simulation_value;
        [~,simulation_datas] = generate_datas(numeric_param,simulation_value);
        % data processing
        if(isreal(simulation_datas(end,:)))
            if(~isnan(simulation_datas(end,:)))
                outputs_1(i,:,j) = sum(simulation_datas(:,:))/(m+1);
                count = count + 1;
            end
        end

        index=index+1;
        simulation_value=[param_samples(i,1:j-1) param_com_samples(i,j) param_samples(i,j+1:end)];
        param_list(index,:)=simulation_value;
        [~,simulation_datas] = generate_datas(numeric_param,simulation_value);
        % data processing
        if(isreal(simulation_datas(end,:)))
            if(~isnan(simulation_datas(end,:)))
                outputs_t(i,:,j) = sum(simulation_datas(:,:))/(m+1);
                count = count + 1;
            end
        end

    end

end

%% Monte Carlo integral

num_out = size(outputs,2); % number of output variables
mean = zeros(1,num_out); % model output mean
variance=zeros(1,num_out);  % model output variance

for i = 1:num_samples
    mean = mean + outputs(i,:)/num_samples; 
    variance = variance + outputs(i,:).^2/num_samples; 
end
 
variance=variance-mean.^2; 
%%
% First-order influence index S: Displays the variance of the dependent variable generated by the variance of the individual input variables.
% Based on the first-order influence index, the sensitivity of individual variables to the model can be quantified.

% Total Effect Index ST: Shows the variance of the dependent variable resulting from the variance of each input variable and its interaction with the other input variables.
S=ones(num_params,num_out).*variance;  
S_total=zeros(num_params,num_out); 

%%
outputs_1=zeros(num_samples,num_state,num_params);
outputs_t=zeros(num_samples,num_state,num_params);


for i = 1:num_samples
    for j = 1:num_params
        S(j,:)=S(j,:)-(outputs(i,:)-outputs_1(i,:,j)).^2/(2*num_samples); % calculate the deviation
        S_total(j,:)=S_total(j,:)+(outputs(i,:)-outputs_t(i,:,j)).^2/(2*num_samples); % calculate the total variance of parameter j
    end
end

%% sensitivity

Sob_1 = S./variance;  %first order effect 
Sob_t = S_total./variance;  % total effect 

%%
Sob_1=Sob_1';
Sob_t=Sob_t';

disp(Sob_1); 
disp(Sob_t); 
%%
Sob=[Sob_1,Sob_t];

% subplot(1,2,1);
colormap('summer');
imagesc(Sob_1);
colorbar;


set(gca,'YTickLabel',{'A','u','T','F','\Phi','\Deltan'},'FontSize',14,'FontName', 'Times New Roman');
set(gca,'XTickLabel',{'','K_d','','A_o_p','','A_c',''},'FontSize',14,'FontName', 'Times New Roman');
hold on;
%%

% subplot(1,2,2);
colormap('summer');
imagesc(Sob_t);
colorbar;

set(gca,'YTickLabel',{'A','u','T','F','\Phi','\Deltan'},'FontSize',14,'FontName', 'Times New Roman');
set(gca,'XTickLabel',{'','K_d','','A_o_p','','A_c',''},'FontSize',14,'FontName', 'Times New Roman');
hold on;

%%
% Sob_1=Sob_1';
Sob_t=Sob_t';
x = linspace(1,6,6);
bar(x,[Sob_t(:,1) Sob_t(:,2) Sob_t(:,3) Sob_t(:,4) Sob_t(:,5) Sob_t(:,6)]);
set(gca,'XTickLabel',{'A','u','T','F','\Phi','\Delta_n'});
legend('K_d','k_n','A_o_p','A_c');

%%
Sob_t=Sob_t';
sum_list=linspace(0,0,num_state);
for i=1:num_state 
    sum_list(i)=sum(Sob_t(i,:));
end

sum_list=sum_list';



