% clear;

%%
% K_d A_op A_c
num_params=2;
lb=[0.1,30];
ub=[0.3,80];
num_time=20;

tf=70;
N0=1;
t1=linspace(0,tf,num_time)';
t=20;
%%
num_samples=20000; % parameter sample total
num_state=1;
N = num_samples*(num_params*2+1); % total number of model runs

[Aparam_samples,Bparam_com_samples]=parameter_samples(num_samples,lb,ub,num_params);
count = 0; 

%%

% outputs=zeros(num_samples);
outputs_B_Aj=zeros(num_samples,num_params);
outputs_t=zeros(num_samples,num_params);
param_list=zeros(N,num_params);

% index=0;

outputsA=Nfunction(Aparam_samples(:,1),Aparam_samples(:,2),t,N0);
outputsB=Nfunction(Bparam_com_samples(:,1),Aparam_samples(:,2),t,N0);
% for i = 1:num_samples
for j = 1:num_params
%         index=index+1;
        simulation_value=[Bparam_com_samples(:,1:j-1) Aparam_samples(:,j)  Bparam_com_samples(:,j+1:end)];
%         param_list(index,:)=simulation_value;
        outputs_B_Aj (:,j) = Nfunction(simulation_value(:,1),simulation_value(:,2),t,N0);   
%         outputs_B_Aj(:,j) = simulation_datas;
        simulation_value=[Aparam_samples(:,1:j-1) Bparam_com_samples(:,j) Aparam_samples(:,j+1:end)];
%         param_list(index,:)=simulation_value;
        outputs_A_Bj(:,j)  = Nfunction(simulation_value(:,1),simulation_value(:,2),t,N0);   
     
        % data processing
end

%% Monte Carlo integral


f_0 =mean(outputsA); % model output mean
f0_variance=mean(outputsA.^2);  % model output variance

% for i = 1:num_samples
%     mean = mean + outputs(i,:)/num_samples; 
%     variance = variance + outputs(i,:).^2/num_samples; 
% end
 
variance=f0_variance-f_0.^2; 
%%
% First-order influence index S: Displays the variance of the dependent variable generated by the variance of the individual input variables.
% Based on the first-order influence index, the sensitivity of individual variables to the model can be quantified.

% Total Effect Index ST: Shows the variance of the dependent variable resulting from the variance of each input variable and its interaction with the other input variables.
S=ones(num_params,1).*variance;  
S_total=zeros(num_params,1); 

%%

for i = 1:num_samples
    for j = 1:num_params
%         S(j)=S(j)-(outputsB(i)-outputs_A_Bj(i,j)).^2/(2*num_samples); % calculate the deviation
        S(j)=S(j)-(outputsA(i)-outputs_B_Aj(i,j)).^2/(2*num_samples); % calculate the deviation
        S_total(j,:)=S_total(j,:)+(outputsA(i)-outputs_A_Bj(i,j)).^2/(2*num_samples); % calculate the total variance of parameter j
    end
end

%% sensitivity

Sob_1 = S./variance;  %first order effect 
Sob_t = S_total./variance;  % total effect 

%%
Sob_1=Sob_1';
Sob_t=Sob_t';

disp(Sob_1); 
disp(Sob_t); 
%%
Sob=[Sob_1,Sob_t];

% subplot(1,2,1);
% colormap('summer');
% imagesc(Sob_1);
% colorbar;
% 
% 
% set(gca,'YTickLabel',{'A','u','T','F','\Phi','\Deltan'},'FontSize',14,'FontName', 'Times New Roman');
% set(gca,'XTickLabel',{'','K_d','','A_o_p','','A_c',''},'FontSize',14,'FontName', 'Times New Roman');
% hold on;
% %%
% 
% % subplot(1,2,2);
% colormap('summer');
% imagesc(Sob_t);
% colorbar;
% 
% set(gca,'YTickLabel',{'A','u','T','F','\Phi','\Deltan'},'FontSize',14,'FontName', 'Times New Roman');
% set(gca,'XTickLabel',{'','K_d','','A_o_p','','A_c',''},'FontSize',14,'FontName', 'Times New Roman');
% hold on;
% 
% %%
% % Sob_1=Sob_1';
% Sob_t=Sob_t';
% x = linspace(1,6,6);
% bar(x,[Sob_t(:,1) Sob_t(:,2) Sob_t(:,3) Sob_t(:,4) Sob_t(:,5) Sob_t(:,6)]);
% set(gca,'XTickLabel',{'A','u','T','F','\Phi','\Delta_n'});
% legend('K_d','k_n','A_o_p','A_c');
% 
% %%
% Sob_t=Sob_t';
% sum_list=linspace(0,0,num_state);
% for i=1:num_state 
%     sum_list(i)=sum(Sob_t(i,:));
% end
% 
% sum_list=sum_list';



